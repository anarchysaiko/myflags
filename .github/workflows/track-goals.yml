name: Track Goals Progress

on:
  push:
    paths:
      - 'README.md'
      - '.github/workflows/track-goals.yml'
    branches:
      - main

jobs:
  update-progress:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytz
          
      - name: Calculate Progress and Add Timestamps
        run: |
          python3 - <<EOF
          import re
          from datetime import datetime
          import pytz
          from urllib.parse import quote

          def calculate_progress(tasks):
              if not tasks:
                  return 0  # 如果没有任务，返回0%而不是None
              total = len([t for t in tasks if t.strip().startswith('- [')])
              if total == 0:
                  return 0
              completed = len([t for t in tasks if t.strip().startswith('- [x]')])
              return (completed * 100 // total) if total > 0 else 0

          def get_color(progress):
              if progress == 0:
                  return 'red'
              elif progress < 30:
                  return 'red'
              elif progress < 70:
                  return 'yellow'
              return 'green'

          def get_beijing_time():
              beijing_tz = pytz.timezone('Asia/Shanghai')
              return datetime.now(beijing_tz).strftime('%Y.%m.%d')

          def create_progress_badge(text, progress, color):
              # 确保进度始终是数字
              progress_text = f'{progress}%25' if isinstance(progress, (int, float)) else '0%25'
              return f'![{text}](https://img.shields.io/badge/{quote(text)}-{progress_text}-{color})'

          # 读取文件内容
          with open('README.md', 'r', encoding='utf-8') as f:
              lines = f.readlines()

          new_lines = []
          modified = False
          sections = {
              '重要且紧急': [],
              '重要不紧急': [],
              '紧急不重要': [],
              '不紧急不重要': []
          }
          current_section = None

          # 首先收集所有任务
          for line in lines:
              if line.startswith('### '):
                  current_section = line.replace('### ', '').split(' ![')[0]
                  continue

              if current_section and line.strip().startswith('- ['):
                  sections[current_section].append(line)

          # 然后处理文件
          current_section = None
          for line in lines:
              if line.startswith('### '):
                  current_section = line.replace('### ', '').split(' ![')[0]
                  # 更新部分标题的进度
                  if current_section in sections:
                      progress = calculate_progress(sections[current_section])
                      color = get_color(progress)
                      badge = create_progress_badge('进度', progress, color)
                      new_lines.append(f'### {current_section} {badge}\n')
                  else:
                      new_lines.append(line)
                  continue

              if line.strip().startswith('- ['):
                  # 检查任务状态
                  is_completed = '- [x]' in line
                  has_completion_badge = '![完成]' in line
                  
                  if is_completed and not has_completion_badge:
                      # 新完成的任务
                      line = re.sub(r'\s*!\[完成\].*?\)\s*$', '', line.rstrip())
                      completion_date = get_beijing_time()
                      line += f' ![完成](https://img.shields.io/badge/完成-{completion_date}-brightgreen)\n'
                      modified = True
                  elif not is_completed and has_completion_badge:
                      # 取消完成的任务
                      line = re.sub(r'\s*!\[完成\].*?\)\s*$', '\n', line)
                      modified = True

              new_lines.append(line)

          # 计算总进度
          all_tasks = []
          for tasks in sections.values():
              all_tasks.extend(tasks)

          total_progress = calculate_progress(all_tasks)
          total_color = get_color(total_progress)

          # 更新总进度徽章
          for i, line in enumerate(new_lines):
              if '![总体完成进度]' in line or '**整体完成情况：**' in line:
                  total_badge = create_progress_badge('总进度', total_progress, total_color)
                  new_lines[i] = f'**整体完成情况：** {total_badge}\n'
                  break

          # 写入更新后的内容
          with open('README.md', 'w', encoding='utf-8') as f:
              f.writelines(new_lines)

          print("Progress update completed successfully!")
          EOF
          
      - name: Commit changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add README.md
          git diff --quiet && git diff --staged --quiet || git commit -m "更新目标进度和完成时间"
          git push
